{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\nvar createDimensions = require(\"../../data/helper/createDimensions\");\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\nvar List = require(\"../../data/List\");\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar _model = require(\"../../util/model\");\nvar groupData = _model.groupData;\nvar _format = require(\"../../util/format\");\nvar encodeHTML = _format.encodeHTML;\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n  /**\n   * @override\n   */\n  init: function (option) {\n    // eslint-disable-next-line\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\n  },\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var groupResult = groupData(data, function (item) {\n      return item[2];\n    });\n    var layData = [];\n    groupResult.buckets.each(function (items, key) {\n      layData.push({\n        name: key,\n        dataList: items\n      });\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n      var name = layData[k].name;\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n    return data;\n  },\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    }\n    var timeDim = data.mapDimension('single'); // data group by name\n\n    var groupResult = groupData(indexArr, function (index) {\n      return data.get('name', index);\n    });\n    var layerSeries = [];\n    groupResult.buckets.each(function (items, key) {\n      items.sort(function (index1, index2) {\n        return data.get(timeDim, index1) - data.get(timeDim, index2);\n      });\n      layerSeries.push({\n        name: key,\n        indices: items\n      });\n    });\n    return layerSeries;\n  },\n  /**\n   * Get data indices for show tooltip content\n    * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n      indices.push(nearestIdx);\n    }\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","map":{"version":3,"names":["SeriesModel","require","createDimensions","_dimensionHelper","getDimensionTypeByAxis","List","zrUtil","_model","groupData","_format","encodeHTML","LegendVisualProvider","DATA_NAME_INDEX","ThemeRiverSeries","extend","type","dependencies","nameMap","init","option","superApply","arguments","legendVisualProvider","bind","getData","getRawData","fixData","data","rawDataLength","length","groupResult","item","layData","buckets","each","items","key","push","name","dataList","layerNum","largestLayer","index","i","len","k","j","timeValue","keyIndex","l","value","getInitialData","ecModel","singleAxisModel","queryComponents","mainType","get","id","axisType","filterData","filter","dataItem","undefined","nameList","createHashMap","count","set","dimensionsInfo","coordDimensions","dimensionsDefine","encodeDefine","single","itemName","list","initData","getLayerSeries","lenCount","indexArr","timeDim","mapDimension","layerSeries","sort","index1","index2","indices","getAxisTooltipData","dim","baseAxis","isArray","nestestValue","minDist","Number","MAX_VALUE","nearestIdx","pointNum","theValue","dist","Math","abs","dataIndices","formatTooltip","dataIndex","htmlName","getName","htmlValue","isNaN","defaultOption","zlevel","z","coordinateSystem","boundaryGap","singleAxisIndex","animationEasing","label","margin","show","position","color","fontSize","emphasis","_default","module","exports"],"sources":["D:/Study/VueWork/cultural_tourism/node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar groupData = _model.groupData;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    // eslint-disable-next-line\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var groupResult = groupData(data, function (item) {\n      return item[2];\n    });\n    var layData = [];\n    groupResult.buckets.each(function (items, key) {\n      layData.push({\n        name: key,\n        dataList: items\n      });\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    }\n\n    var timeDim = data.mapDimension('single'); // data group by name\n\n    var groupResult = groupData(indexArr, function (index) {\n      return data.get('name', index);\n    });\n    var layerSeries = [];\n    groupResult.buckets.each(function (items, key) {\n      items.sort(function (index1, index2) {\n        return data.get(timeDim, index1) - data.get(timeDim, index2);\n      });\n      layerSeries.push({\n        name: key,\n        indices: items\n      });\n    });\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n    * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}